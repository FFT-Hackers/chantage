#ifndef CHANTAGE_H
#define CHANTAGE_H

#include <chantage/psp.h>
#include <chantage/psp_module_info.h>

#define PACKED  __attribute__ ((packed))

typedef int8_t      i8;
typedef int16_t     i16;
typedef int32_t     i32;

typedef uint8_t     u8;
typedef uint16_t    u16;
typedef uint32_t    u32;

struct u24 {
    unsigned u24 :24;
} __attribute__((packed));

typedef struct {
    u8      palette;
    u8      gfx;
    u8      level;
    u8      flags;
    u8      unk0;
    u8      type;
    u8      unk1;
    u8      attrID;
    u16     price;
    u8      shop;
    u8      unk2;
} PACKED ItemData;

typedef struct {
    u8 spriteMask;
    u8 unitID;
    u8 partyID;
    u8 JobID;
    u8 paletteMask;
    u8 ENTDFlagsMask;
    u8 genderMask;
    u8 deathCounter;
    u8 birthdayMask;
    u8 zodiacMask;
    u16 innateAbility1;
    u16 innateAbility2;
    u16 innateAbility3;
    u16 innateAbility4;
    u8 primarySkillSet;
    u8 secondarySkillSet;
    u16 reactionAbility;
    u16 supportAbility;
    u16 movementAbility;
    u16 equipHead;
    u16 equipBody;
    u16 equipAccessory;
    u16 equipRHWeapon;
    u16 equipRHShield;
    u16 equipLHWeapon;
    u16 equipLHShield;
    u8 experience;
    u8 level;
    u8 baseBrave;
    u8 brave;
    u8 baseFaith;
    u8 faith;
    u8 turn;
    u8 unk;
    u16 HP;
    u16 maxHP;
    u16 MP;
    u16 maxMP;
    u8 basePA;
    u8 baseMA;
    u8 baseSP;
    u8 bonusPA;
    u8 bonusMA;
    u8 bonusSP;
    u8 PA;
    u8 MA;
    u8 SP;
    u8 CT;
    u8 move;
    u8 jump;
    u8 weaponPower1;
    u8 weaponPower2;
    u8 wEvade1;
    u8 wEvade2;
    u8 accPEV;
    u8 rhShieldPEV;
    u8 lhShieldPEV;
    u8 charEV;
    u8 accMEV;
    u8 rhShieldMEV;
    u8 lhShieldMEV;
    u8 xCoord;
    u8 yCoord;
    u8 orientatinMask;
    u8 canEquipMask1;
    u8 canEquipMask2;
    u8 canEquipMask3;
    u8 canEquipMask4;
    u8 canEquipMask5;
    u8 unknownMask;
    u8 innateStatusMask1;
    u8 innateStatusMask2;
    u8 innateStatusMask3;
    u8 innateStatusMask4;
    u8 innateStatusMask5;
    u8 immuneStatusMask1;
    u8 immuneStatusMask2;
    u8 immuneStatusMask3;
    u8 immuneStatusMask4;
    u8 immuneStatusMask5;
    u8 currentStatusMask1;
    u8 currentStatusMask2;
    u8 currentStatusMask3;
    u8 currentStatusMask4;
    u8 currentStatusMask5;
    u8 poisonCT;
    u8 regenCT;
    u8 protectCT;
    u8 shellCT;
    u8 hasteCT;
    u8 slowCT;
    u8 stopCT;
    u8 wallCT;
    u8 faithCT;
    u8 athiestCT;
    u8 charmCT;
    u8 sleepCT;
    u8 immobilizeCT;
    u8 disableCT;
    u8 reflectCT;
    u8 deathSentenceCT;
    u8 elementsAbsorbMask;
    u8 elementsNullMask;
    u8 elementsHalvedMask;
    u8 elementsWeakMask;
    u8 elementsBoostMask;
    u24 rawHP;
    u24 rawMP;
    u24 rawSP;
    u24 rawPA;
    u24 rawMA;
    u8 HPGrowth;
    u8 HPMultipler;
    u8 MPGrowth;
    u8 MPMultipler;
    u8 SPGrowth;
    u8 SPMultipler;
    u8 PAGrowth;
    u8 PAMultipler;
    u8 MAGrowth;
    u8 MAMiltipler;
    u8 reactionsMask1;
    u8 reactionsMask2;
    u8 reactionsMask3;
    u8 reactionsMask4;
    u8 supportMask1;
    u8 supportMask2;
    u8 supportMask3;
    u8 supportMask4;
    u8 movementMask1;
    u8 movementMask2;
    u8 movementMask3;
    u8 availableJobsMask1;
    u8 availableJobsMask2;
    u8 availableJobsMask3;
    u8 baseAbilitiesMask1;
    u8 baseAbilitiesMask2;
    u8 baseRSM;
    u8 chemistAbilitiesMask1;
    u8 chemistAbilitiesMask2;
    u8 chemistRSM;
    u8 knightAbilitiesMask1;
    u8 knightAbilitiesMask2;
    u8 knightRSM;
    u8 archerAbilitiesMask1;
    u8 archerAbilitiesMask2;
    u8 archerRSM;
    u8 monkAbilitiesMask1;
    u8 monkAbilitiesMask2;
    u8 monkRSM;
    u8 wMageAbilitiesMask1;
    u8 wMageAbilitiesMask2;
    u8 wMageRSM;
    u8 bMageAbilitiesMask1;
    u8 bMageAbilitiesMask2;
    u8 bMageRSM;
    u8 tMageAbilitiesMask1;
    u8 tMageAbilitiesMask2;
    u8 tMageRSM;
    u8 summonerAbilitiesMask1;
    u8 summonerAbilitiesMask2;
    u8 summonerRSM;
    u8 thiefAbilitiesMask1;
    u8 thiefAbilitiesMask2;
    u8 thiefRSM;
    u8 oratorAbilitiesMask1;
    u8 oratorAbilitiesMask2;
    u8 oratorRSM;
    u8 mysticAbilitiesMask1;
    u8 mysticAbilitiesMask2;
    u8 mysticRSM;
    u8 geomancerAbilitiesMask1;
    u8 geomancerAbilitiesMask2;
    u8 geomancerRSM;
    u8 dragoonAbilitiesMask1;
    u8 dragoonAbilitiesMask2;
    u8 dragoonRSM;
    u8 samuraiAbilitiesMask1;
    u8 samuraiAbilitiesMask2;
    u8 samuraiRSM;
    u8 ninjaAbilitiesMask1;
    u8 ninjaAbilitiesMask2;
    u8 ninjaRSM;
    u8 arithmeticianAbilitiesMask1;
    u8 arithmeticianAbilitiesMask2;
    u8 arithmeticianRSM;
    u8 bardAbilitiesMask1;
    u8 bardAbilitiesMask2;
    u8 bardRSM;
    u8 dancerAbilitiesMask1;
    u8 dancerAbilitiesMask2;
    u8 dancerRSM;
    u8 mimeAbilitiesMask1;
    u8 mimeAbilitiesMask2;
    u8 mimeRSM;
    u8 dKnightAbilitiesMask1;
    u8 dKnightAbilitiesMask2;
    u8 dKnightRSM;
    u8 oKnightAbilitiesMask1;
    u8 oKnightAbilitiesMask2;
    u8 oKnightRSM;
    u8 baseChemJobLevels;
    u8 knightArcherJobLevels;
    u8 monkWMageJobLevels;
    u8 bMageTMageJobLevels;
    u8 summonerThiefJobLevels;
    u8 mediatorOracleJobLevels;
    u8 geomancerDragoonJobLevels;
    u8 samuraiNinjaJobLevels;
    u8 arithmeticianBardJobLevels;
    u8 dancerMimeJobLevels;
    u8 dKnightOKnightJobLevels;
    u8 oKnightMasteredFlag;
    u8 unknownByte;
    u16 baseJobJP;
    u16 chemistJobJP;
    u16 knightJobJP;
    u16 archerJobJP;
    u16 monkJobJP;
    u16 wMageJobJP;
    u16 bMageJobJP;
    u16 tMageJobJP;
    u16 summonerJobJP;
    u16 thiefJobJP;
    u16 oratorJobJP;
    u16 mysticJobJP;
    u16 geomancerJobJP;
    u16 lancerJobJP;
    u16 samuraiJobJP;
    u16 ninjaJobJP;
    u16 arithmeticianJobJP;
    u16 bardJobJP;
    u16 dancerJobJP;
    u16 mimeJobJP;
    u16 dKnightJobJP;
    u16 oKnightJobJP;
    u16 unknownJP;
    u16 totalBaseJobJP;
    u16 totalChemistJobJP;
    u16 totalKnightJobJP;
    u16 totalArcherJobJP;
    u16 totalMonkJobJP;
    u16 totalWMageJobJP;
    u16 totalBMageJobJP;
    u16 totalTMageobJPJ;
    u16 totalSummonerJobJP;
    u16 totalThiefJobJP;
    u16 totalOratorJobJP;
    u16 totalMysticJobJP;
    u16 totalGeomancerJobJP;
    u16 totalLancerJobJP;
    u16 totalSamuraiJobJP;
    u16 totalNinjaJobJP;
    u16 totalArithmeticianJobJP;
    u16 totalBardJobJP;
    u16 totalDancerJobJP;
    u16 totalMimeJobJP;
    u16 totalDKnightJobJP;
    u16 totalOKnightJobJP;
    u16 totalUnknownJP;
    u8 unitName[16];
    u8 jobName[16];
    u8 primarySkillSetName[8];
    u8 secondarySkillSetName[8];
    u8 unitDeathCount;
    u8 currentAbilityCT;
    u8 graphic;
    u8 portrait;
    u8 palette;
    u8 ENTD_id;
    u8 specialSkillSet;
    u8 warTrophy;
    u8 bonusMoney;
    u8 AIXLocation;
    u8 AIYLocation;
    u8 AIFlags;
    u8 PrioritizedTarget;
    u8 ENTDFlags1;
    u8 ENTDFlags2;
    u8 saveCT;
    u8 ENTDFlags3;
    u8 unknownFlags1;
    u8 unknownFlags2;
    u16 unitNameID;
    u8 chargeAttackerID;
    u8 lastSkillSetUsed;
    u8 lastAttackUsed;
    u16 arithmeticianTypeID;
    u16 arithmeticianMultiplierID;
    u16 usedItemId;
    u8 tileSpecificFlags;
    u8 targetID;
    u8 targetXCoord;
    u8 terrainFlags;
    u16 targetMapLevel;
    u8 targetYCoord;
    u8 unknownByte1;
    u8 unknownByte2;
    u8 unknownByte3;
    u8 mountFlags;
    u8 unitActiveFlags;
    u8 equipRequirementFlags;
    u8 unknownByte4;
    u8 charactersTurn;
    u8 hasMoved;
    u8 hasActed;
    u8 inWaterFlags;
    u8 unitIDNoExistCheck;
    u8 abilityCT;
    ActionData actionData;

} PACKED BattleData;

typedef struct {
    u8 hitFlag;
    u8 critFlag;
    u8 evadeTypeMask;
    u8 itemToBreak;
    u8 unknownByte1;
    u8 unknownByte2;
    u16 HPDamage;
    u16 HPRecovery;
    u16 MPDamage;
    u16 MPRecovery;
    u16 gilLostOrStolen;
    u16 reactionID;
    u8 specialFlagMask1;
    u8 specialFlagMask2;
    u8 SPChange;
    u8 CTChange;
    u8 PAChange;
    u8 MAChange;
    u8 braveChange;
    u8 faithChange;
    u8 statusChange;
    u8 removeEquipChange;
    u8 unknownByte3;
    u8 statusInflictedMask1;
    u8 statusInflictedMask2;
    u8 statusInflictedMask3;
    u8 statusInflictedMask4;
    u8 statusInflictedMask5;
    u8 statusRemovedMask1;
    u8 statusRemovedMask2;
    u8 statusRemovedMask3;
    u8 statusRemovedMask4;
    u8 statusRemovedMask5;
    u8 attackTypeFlags;
    u16 lastAttackOnSelf;
    u8 stolenExp;
    u8 stolenJP;
    u8 hitChance;
    u8 unknownByte4;
    u8 mainTargetID;
    u8 unknownByte5;
    u8 ENTDFlagMask;
    u8 inflictedStatusMask1;
    u8 inflictedStatusMask2;
    u8 inflictedStatusMask3;
    u8 inflictedStatusMask4;
    u8 inflictedStatusMask5;
    u8 killsScored;
    u8 unitKillerID;


} PACKED ActionData;

typedef struct{
    u8 tauntedMask;
    u8 taunterID;
    u8 coveredID;
} PACKED ExtendedBattleData

/*
 * items.c
 */
typedef ItemData*   (PFNGETITEMDATAPROC)(u16);
typedef int         (PFNISITEMVALIDPROC)(u16);
typedef size_t      (PFNITEMCOUNTPROC)();
typedef u16         (PFNCREATEITEMPROC)();

typedef void* (PFNLOADFUNCTIONPROC)(const char*);
typedef void* (PFNREGISTERFUNCTIONPROC)(const char*, void*);
typedef void  (PFNREPLACEFUNCTIONPROC)(void*, const void*);

typedef struct{
    BattleData* battleData;
    ExtendedBattleData* extendedBattleData;
} PACKED NewBattleData

typedef struct{
    u16 JPCost;
    u8 learnChance;
    u8 abilityTypeMask;
    u8 abilityAIFlags1;
    u8 abilityAIFlags2;
    u8 abilityAIFlags3;
    u8 abilityAIFlags4;
} PACKED AbilityAIData

typedef struct{
    u8 range;
    u8 effectArea;
    u8 vertical;
    u8 abilityFlagsMask1;
    u8 abilityFlagsMask2;
    u8 abilityFlagsMask3;
    u8 abilityFlagsMask4;
    u8 element;
    u8 formula;
    u8 xConstant;
    u8 yConstant;
    u8 inflictStatus;
    u8 CT;
    u8 MPCost;

} PACKED AbilityData

typedef struct{
    u8 newStatusMask;
    u8 newRequirementsMask;
} PACKED ExtraAbilityData

#endif
